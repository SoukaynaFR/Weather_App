{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction WeatherComponent_img_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 21);\n  }\n}\nfunction WeatherComponent_img_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 22);\n  }\n}\nexport class WeatherComponent {\n  constructor() {\n    this.cityName = 'London';\n  }\n  ngOnInit() {\n    this.WeatherData = {\n      main: {}\n    };\n    this.getWeatherData();\n    console.log(this.WeatherData);\n  }\n  onSubmit() {}\n  getWeatherData() {\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${this.cityName}&appid=15157990a839b26e8e8c626470c01af8`).then(response => response.json()).then(data => {\n      this.setWeatherData(data);\n    });\n    //   let data = JSON.parse('{\"coord\":{\"lon\":10.99,\"lat\":44.34},\"weather\":[{\"id\":800,\"main\":\"Clear\",\"description\":\"clear sky\",\"icon\":\"01d\"}],\"base\":\"stations\",\"main\":{\"temp\":298.82,\"feels_like\":298.62,\"temp_min\":296.86,\"temp_max\":300.05,\"pressure\":1018,\"humidity\":45,\"sea_level\":1018,\"grnd_level\":936},\"visibility\":10000,\"wind\":{\"speed\":3.01,\"deg\":30,\"gust\":3.59},\"clouds\":{\"all\":0},\"dt\":1694183105,\"sys\":{\"type\":2,\"id\":2075663,\"country\":\"IT\",\"sunrise\":1694148391,\"sunset\":1694194899},\"timezone\":7200,\"id\":3163858,\"name\":\"Zocca\",\"cod\":200}')\n    // this.setWeatherData(data);\n  }\n\n  setWeatherData(data) {\n    this.WeatherData = data;\n    this.WeatherData.name = this.WeatherData.name;\n    this.WeatherData.temp_min = (this.WeatherData.main.temp_min - 273.15).toFixed(0);\n    this.WeatherData.temp_max = (this.WeatherData.main.temp_max - 273.15).toFixed(0);\n    this.WeatherData.temp = (this.WeatherData.main.temp - 273.15).toFixed(0);\n    this.WeatherData.humidity = this.WeatherData.main.humidity;\n    this.WeatherData.wind = this.WeatherData.wind.speed;\n  }\n}\n_class = WeatherComponent;\n_class.ɵfac = function WeatherComponent_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-weather\"]],\n  decls: 48,\n  vars: 18,\n  consts: [[1, \"search\"], [3, \"submit\"], [\"form\", \"ngForm\"], [\"type\", \"text\", \"placeholder\", \"Search a city\", \"name\", \"city\", 3, \"ngModel\", \"ngModelChange\"], [1, \"card\"], [1, \"upper_data\"], [\"src\", \"../assets/images/cold.png\", \"alt\", \"cold\", 4, \"ngIf\"], [\"src\", \"../assets/images/hot.png\", \"alt\", \"hot\", 4, \"ngIf\"], [1, \"weather_data\"], [1, \"location\"], [1, \"tempertaure\"], [1, \"lower_data\"], [1, \"more_info_label\"], [1, \"more_info_container\"], [1, \"info_block\"], [1, \"info_block_label\"], [\"src\", \"../assets/images/min.png\", \"alt\", \"min\"], [1, \"info_block_value\"], [\"src\", \"../assets/images/max.png\", \"alt\", \"max\"], [\"src\", \"../assets/images/humidity.png\", \"alt\", \"humidity\"], [\"src\", \"../assets/images/wind.png\", \"alt\", \"wind\"], [\"src\", \"../assets/images/cold.png\", \"alt\", \"cold\"], [\"src\", \"../assets/images/hot.png\", \"alt\", \"hot\"]],\n  template: function WeatherComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1, 2);\n      i0.ɵɵlistener(\"submit\", function WeatherComponent_Template_form_submit_1_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function WeatherComponent_Template_input_ngModelChange_3_listener($event) {\n        return ctx.cityName = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(4, \"div\", 4)(5, \"div\", 5);\n      i0.ɵɵtemplate(6, WeatherComponent_img_6_Template, 1, 0, \"img\", 6);\n      i0.ɵɵtemplate(7, WeatherComponent_img_7_Template, 1, 0, \"img\", 7);\n      i0.ɵɵelementStart(8, \"div\", 8)(9, \"div\", 9);\n      i0.ɵɵtext(10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 10);\n      i0.ɵɵtext(12);\n      i0.ɵɵpipe(13, \"number\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(14, \"div\", 11)(15, \"div\", 12);\n      i0.ɵɵtext(16, \" More Information\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"div\", 13)(18, \"div\", 14)(19, \"div\", 15);\n      i0.ɵɵelement(20, \"img\", 16);\n      i0.ɵɵelementStart(21, \"span\");\n      i0.ɵɵtext(22, \"Min\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"div\", 17);\n      i0.ɵɵtext(24);\n      i0.ɵɵpipe(25, \"number\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(26, \"div\", 14)(27, \"div\", 15);\n      i0.ɵɵelement(28, \"img\", 18);\n      i0.ɵɵelementStart(29, \"span\");\n      i0.ɵɵtext(30, \"Max\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(31, \"div\", 17);\n      i0.ɵɵtext(32);\n      i0.ɵɵpipe(33, \"number\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(34, \"div\", 14)(35, \"div\", 15);\n      i0.ɵɵelement(36, \"img\", 19);\n      i0.ɵɵelementStart(37, \"span\");\n      i0.ɵɵtext(38, \"Humidity\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(39, \"div\", 17);\n      i0.ɵɵtext(40);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(41, \"div\", 14)(42, \"div\", 15);\n      i0.ɵɵelement(43, \"img\", 20);\n      i0.ɵɵelementStart(44, \"span\");\n      i0.ɵɵtext(45, \"wind\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(46, \"div\", 17);\n      i0.ɵɵtext(47);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.cityName);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.WeatherData.temp <= 15);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.WeatherData.temp > 15);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\" \", ctx.WeatherData.name, \" \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(13, 9, ctx.WeatherData.temp, \"1.0-0\"), \" \\u00B0C \");\n      i0.ɵɵadvance(12);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(25, 12, ctx.WeatherData.temp_min, \"1.0-0\"), \" \\u00B0C \");\n      i0.ɵɵadvance(8);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(33, 15, ctx.WeatherData.temp_max, \"1.0-0\"), \" \\u00B0C \");\n      i0.ɵɵadvance(8);\n      i0.ɵɵtextInterpolate1(\" \", ctx.WeatherData.humidity, \" % \");\n      i0.ɵɵadvance(7);\n      i0.ɵɵtextInterpolate1(\" \", ctx.WeatherData.wind, \" km/h \");\n    }\n  },\n  dependencies: [i1.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.NgForm, i1.DecimalPipe],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelement","WeatherComponent","constructor","cityName","ngOnInit","WeatherData","main","getWeatherData","console","log","onSubmit","fetch","then","response","json","data","setWeatherData","name","temp_min","toFixed","temp_max","temp","humidity","wind","speed","selectors","decls","vars","consts","template","WeatherComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","WeatherComponent_Template_form_submit_1_listener","WeatherComponent_Template_input_ngModelChange_3_listener","$event","ɵɵelementEnd","ɵɵtemplate","WeatherComponent_img_6_Template","WeatherComponent_img_7_Template","ɵɵtext","ɵɵadvance","ɵɵproperty","ɵɵtextInterpolate1","ɵɵpipeBind2"],"sources":["C:\\Users\\ME✨\\Desktop\\weather-app-angular\\weather-app\\src\\app\\weather\\weather.component.ts","C:\\Users\\ME✨\\Desktop\\weather-app-angular\\weather-app\\src\\app\\weather\\weather.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { response } from 'express';\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.css']\n})\nexport class WeatherComponent implements OnInit{\n  \nWeatherData:any;\ncityName:string='London';\nconstructor(){}\n\n\n  ngOnInit(): void {\n    this.WeatherData = {\n      main: {}\n    }\n    this.getWeatherData();\n    console.log(this.WeatherData);\n  }\n  \n  onSubmit(){\n    \n  }\n\n  getWeatherData(){\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${this.cityName}&appid=15157990a839b26e8e8c626470c01af8`)\n  \n    .then(response => response.json())\n    .then(data =>{this.setWeatherData(data);})\n\n  //   let data = JSON.parse('{\"coord\":{\"lon\":10.99,\"lat\":44.34},\"weather\":[{\"id\":800,\"main\":\"Clear\",\"description\":\"clear sky\",\"icon\":\"01d\"}],\"base\":\"stations\",\"main\":{\"temp\":298.82,\"feels_like\":298.62,\"temp_min\":296.86,\"temp_max\":300.05,\"pressure\":1018,\"humidity\":45,\"sea_level\":1018,\"grnd_level\":936},\"visibility\":10000,\"wind\":{\"speed\":3.01,\"deg\":30,\"gust\":3.59},\"clouds\":{\"all\":0},\"dt\":1694183105,\"sys\":{\"type\":2,\"id\":2075663,\"country\":\"IT\",\"sunrise\":1694148391,\"sunset\":1694194899},\"timezone\":7200,\"id\":3163858,\"name\":\"Zocca\",\"cod\":200}')\n  // this.setWeatherData(data);\n  }\n\n  setWeatherData(data: any){\n    this.WeatherData = data;\n    this.WeatherData.name =this.WeatherData.name;\n    this.WeatherData.temp_min = (this.WeatherData.main.temp_min - 273.15).toFixed(0);\n    this.WeatherData.temp_max = (this.WeatherData.main.temp_max - 273.15).toFixed(0);\n    this.WeatherData.temp = (this.WeatherData.main.temp - 273.15).toFixed(0);\n    this.WeatherData.humidity = this.WeatherData.main.humidity ;\n    this.WeatherData.wind = this.WeatherData.wind.speed;\n    \n\n\n\n  }\n}\n","<div class=\"search\">\n    <form   #form=\"ngForm\" (submit)=\"onSubmit()\" >\n        <input type=\"text\" placeholder=\"Search a city\" name=\"city\" [(ngModel)]=\"cityName\">\n    </form>\n</div>\n\n<div class=\"card\">\n    <div class=\"upper_data\">\n        <img src=\"../assets/images/cold.png\" alt=\"cold\" *ngIf=\"WeatherData.temp <= 15\">\n        <img src=\"../assets/images/hot.png\" alt=\"hot\"  *ngIf=\"WeatherData.temp > 15\">\n        <div class=\"weather_data\">\n            <div class=\"location\">\n                {{ WeatherData.name }}\n\n            </div>\n            <div class=\"tempertaure\">\n                {{ WeatherData.temp | number: '1.0-0'}} °C\n\n            </div>\n        </div>\n\n\n    </div>\n    <div class=\"lower_data\">\n<div class=\"more_info_label\">\n    More Information\n</div>\n\n<div class=\"more_info_container\">\n    <div class=\"info_block\">\n        <div class=\"info_block_label\">\n            <img src=\"../assets/images/min.png\" alt=\"min\">\n            <span>Min</span>\n        </div>\n        <div class=\"info_block_value\">\n            {{ WeatherData.temp_min | number: '1.0-0'}} °C\n        </div>\n    </div>\n\n    <div class=\"info_block\">\n        <div class=\"info_block_label\">\n            <img src=\"../assets/images/max.png\" alt=\"max\">\n            <span>Max</span>\n        </div>\n        <div class=\"info_block_value\">\n            {{ WeatherData.temp_max | number: '1.0-0'}} °C\n        </div>\n    </div>\n\n    <div class=\"info_block\">\n        <div class=\"info_block_label\">\n            <img src=\"../assets/images/humidity.png\" alt=\"humidity\">\n            <span>Humidity</span>\n        </div>\n        <div class=\"info_block_value\">\n            {{ WeatherData.humidity }} %\n        </div>\n    </div>\n\n    <div class=\"info_block\">\n        <div class=\"info_block_label\">\n            <img src=\"../assets/images/wind.png\" alt=\"wind\">\n            <span>wind</span>\n        </div>\n        <div class=\"info_block_value\">\n            {{ WeatherData.wind }} km/h\n        </div>\n    </div>\n\n   \n</div>\n    </div>\n\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}